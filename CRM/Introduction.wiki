[[Contents|Previous]] [[The Cool Reference Manual|Up]] [[Getting Started|Next]]
= Introduction =

This manual describes the programming language Cool: the $\it C$lassroom $\it O$bject-$\it O$riented $\it L$anguage. Cool is a small language that can be implemented with reasonable effort in a one semester course. Still, Cool retains many of the features of modern programming languages including objects, static typing, and automatic memory management.

Cool programs are sets of $\it classes$. A class encapsulates the variables and procedures of a data type. Instances of a class are $\it objects$. In Cool, classes and types are identified. That is, every class defines a type. Classes permit programmers to define new types and associated procedures (or $\it methods$) specific to those types. Inheritance allows new types to extend the behavior of existing types.

Cool is an $\it expression$ language. Most Cool constructs are expressions, and every expression has a value and a type. Cool is $\it type safe$: procedures are guaranteed to be applied to data of the correct type. While static typing imposes a strong discipline on programming in Cool, it guarantees that no runtime type errors can arise in the execution of Cool programs.

This manual is divided into informal and formal components. For a short, informal overview, the first half (through Section 9) suffices. The formal description begins with Section 10.

[[Contents|Previous]] [[The Cool Reference Manual|Up]] [[Getting Started|Next]]